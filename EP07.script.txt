（白板）

大家好。在今天的影片中，我們會幫我們的小遊戲加上背景圖片，
並且透過應用 ViewPort 的概念，讓我們的遊戲視窗不管怎樣被
放大縮小，始終都會把遊戲內的世界，以固定的長寬比完整的顯
示出來。

-------------------

（白板）

歡迎回到自己的遊戲自己寫，今天我們不玩遊戲，來寫遊戲。

在上一個影片當中，我們已經幫這個小遊戲實作了每兩秒鐘，就
會有一個水滴從畫面上方出現並滴落的功能，而且每次出現的水
滴落下的速度，都會有所不同。

如果你錯過了之前的影片，下方的描述欄裡，有完整的播放清單
喔！

不過呢，我們的遊戲還是有些問題，就是當遊戲視窗被更改時，
遊戲裡的物件會被拉伸，而且「水桶跟著滑鼠走」的功能，也會
故障。

今天我們會來修正這個問題。不過在開始前，我們先來幫這個小
遊戲，加上一個背景圖片吧！

--------------------

（螢幕）

首先，我們一樣要到 LibGDX 的官方的 A Simple Game 教學
頁面，點選中間這個Loading Assets 的連結，點選
background.png 並存放到專 案資料下面的 src/main/resources 
資料夾裡。

同樣的，我會把連結放到下方的描述欄裡。

這是一個 800x500 的圖片，為了方便之後的說明，我們需要先
把遊戲視窗的大小調整成 800x500，並且順便把之前散落在程
式碼各處，寫死的視窗大小集中起來管理。


-----------
（IDE）

回到 IntelliJ 裡面，先在專案裡開一個 Scala 的 Singleton
物件，名稱是 GameWorld。

在 GameWorld 裡，宣告一個 val 變數，名稱是 WIDTH，數值是
800，這是我們遊戲世界的寬度。

  val WIDTH = 800

另外也宣告一個名稱為 HEIGHT 的 val 變數，數值是 500，這個
是我們遊戲世界的高度。

要注意的是，這邊我講的是「遊戲世界」的高度和寬度，而不是
視窗的高度和寬度。我們之後會看到為什麼會這樣子說。

-------------------

（IDE DropsLauncher.scala）

接下來我們要把原本寫死的 1080 和 720 這兩個數字，都改成這
兩個變數。

第一個是在 DropsLauncher.scala 中，第 13 行 setWindowedMode 
的地方，我們分別把第一個和第二個參數改成
GameWorld.WIDTH 和 GameWorld.HEIGHT。

-------------------

（IDE Bucket.scala）

下一個檔案是 Bucket.scala，在第 27 行的地方，把 1080 改成
GameWorld.WIDTH，以及下一行的 720 改成 GameWorld.HEIGHT。

移動到檔案的最下方，第 66 行有一個 720，這邊要改成 
GameWorld.HEIGHT。

--------------------

（IDE Drop.scala)

最後一個檔案是 Drop.scala，在 createWithSpriteWithRandomX
的函式裡，同樣的，把 1080 改成 GameWorld.WIDTH，把 720 改
成 GameWorld.HEIGHT。

---------------------

（IDE Textures.scala）

接下來我們來幫遊戲加上背景吧！


